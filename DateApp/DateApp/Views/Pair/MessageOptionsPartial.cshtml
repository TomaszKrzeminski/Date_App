@model MessageOptionsViewModel
@using DateApp.Models;


<style type="text/css">

    .hidden {
        display: none;
    }
</style>



<div class="row">
    <div style="min-height:1900px;border-style:solid;" class="col-lg-6">
        <div class="row">
            <div class="col-lg-12" style="min-height:100px;border-style:solid;background-color:#fd267d;">
                <div class="row">
                    <div class="col-lg-4" style="max-height:80px;max-width:80px;">
                        <a href='@Url.Action("Panel","Home")'>
                            <img alt="0" class="img-thumbnail" src=@Model.UserMainPhotoPath>
                        </a>
                    </div>
                    <div class="col-lg-8"> <label>@Model.UserName</label></div>
                </div>

            </div>


        </div>
        <div class="row">
            <form id="PairPanelForm" asp-action="PairPanel" asp-controller="Pair" method="get">
                <div class="btn-group" role="group" aria-label="Basic example">
                    <button type="button" class="btn btn-dark" name="Pair">Pary</button>
                    <button type="button" class="btn btn-dark" name="Message">Wiadomości</button>
                    <input class="hidden" name="select" id="SelectP" />
                </div>
            </form>
        </div>


        <div id="ChatUsers">
            @foreach (var item in Model.list)
            {

                if (item.IsRead == false)
                {
                    <div class="row">

                        <div class="col-lg-12">

                            <form class="ChooseReceiver" asp-action="WriteMessage" asp-controller="Message" method="post">
                                <div>
                                    <label class="font-weight-bold">@item.Name</label>

                                </div>
                                <img style="border: 3px solid #000; padding:0;" alt=@item.Name class="" src=@item.ReceiverMainPhotoPath width="100" height="100">
                                <p class="font-weight-bold">@item.MessageBeggining</p>
                                <label>@item.Name</label>
                                <input type="hidden" value="@item.ReceiverId" name="ReceiverId" />
                                <img border="0" style="border-style:outset" name="Status" class="" src="~/Images/offline2.jpg" width="20" height="20">
                            </form>
                            <hr />
                        </div>
                    </div>


                }
                else
                {

                    <div class="row">

                        <div class="col-lg-12">

                            <form class="ChooseReceiver" asp-action="WriteMessage" asp-controller="Message" method="post">
                                <div>

                                   
                                </div>
                                <img border="0" style="border-style:outset" alt=@item.Name class="" src=@item.ReceiverMainPhotoPath width="100" height="100">
                                <p>@item.MessageBeggining</p>
                                <label>@item.Name</label>
                                <input type="hidden" value="@item.ReceiverId" name="ReceiverId" />
                                <img border="0" style="border-style:outset"  name="Status" class="" src="~/Images/offline2.jpg" width="20" height="20">
                                
                            </form>
                            <hr />
                        </div>



                    </div>


                }



            }
        </div>




    </div>
    <div class="col-lg-6"></div>
</div>

<script>


   









    ///change View from Message to Pair

    $("button[name='Pair']").click(function () {
        $('#SelectP').val("Pair");
        $('#PairPanelForm').submit();
    });

    $("button[name='Message']").click(function () {
        $('#SelectP').val("Message");
        $('#PairPanelForm').submit();
    });

    /////







    /////Send Message

    $(document).on('click', '#SendMessage', function () {

        var message = {};
        var ReceiverId = $('#RId').val();
        var SenderId = $('#SId').val();
        var Text = $('#MText').val();
        message['ReceiverId'] = ReceiverId;
        message['SenderId'] = SenderId;
        message['MessageText'] = Text;


        $.ajax({
     url: '@Url.Action("SendMessage", "Message")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
     data: message,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {

         $("#MessageWritePage").html(result);


     }
 });


    });

    ////





    /////Select Page

     $(document).on('click', '.page-link', function () {


         var element = $(this).text();
         var ActionMade;
         var ReceiverId = $('#ReceiverIdChangePage').val();
         if (element == "Next")
         {
             ActionMade = "Next";
         }
         else if (element == "Previous")
         {
             ActionMade = "Previous";
         }
         else
         {
             ActionMade = element;
         }


         var ActivePage = $("li.active a").text();

        var Data = {};
        Data['ReceiverId'] = ReceiverId;
         Data['ActionMade'] = ActionMade;
         Data['ActivePage'] = ActivePage;


        $.ajax({
     url: '@Url.Action("SelectPage", "Message")',
     type: "get",
     contentType: 'application/x-www-form-urlencoded',
     data: Data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {


         $("#MessageWritePage").html(result);


     }
 });


    });
   ////

    ///// //////

    ///Write Message
    $(document).on('click', 'form.ChooseReceiver', function () {

        var data = {};
        var Id = $(this).find('input[name="ReceiverId"]').val();
        data["ReceiverId"] = Id;


        $.ajax({
     url: '@Url.Action("WriteMessage", "Message")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
     data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {


         $("#MessageWritePage").html(result);


     }
 });


    });

    ///


    //// refresh receivers
    $(document).on('click', 'form.ChooseReceiver', function () {


        //// fire after few seconds wait for db to update
        window.setTimeout(function () {

var data = {};
        var Id = $(this).find('input[name="ReceiverId"]').val();
        data["ReceiverId"] = Id;


        $.ajax({
     url: '@Url.Action("RefreshReceivers", "Message")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
     data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {




                $("#ChatUsers").html(result);


     }
 });

        }, 3000);





    });

    ///

    ////Signal R


    var connection = new signalR.HubConnectionBuilder().withUrl("/messages").build();






    connection.on("UpdateChat_Users", function (message) {



var data = {};
        var Id = $(this).find('input[name="ReceiverId"]').val();
        data["ReceiverId"] = Id;


        $.ajax({
     url: '@Url.Action("RefreshReceivers", "Message")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
     data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {




                $("#ChatUsers").html(result);


     }
 });



    });







    connection.start().then(

    ).catch(function (err) {
        alert("Błąd  w Refresh Users"+ err);

    }).then(() => {


    });










    //////


    ////Signal R refresch writeMessage




     var connection2 = new signalR.HubConnectionBuilder().withUrl("/messages").build();





    connection2.on("UpdateChat_WriteMessage", function (Id) {

        alert("Refresh Chat " + Id);

        var ReceiverName = $("#ReceiverName").val();

        if (ReceiverName != null && ReceiverName == Id)
        {


            alert("Signal R  Refresh Write Message");

 var data = {};

            data["ReceiverId"] = $("#ReceiverID").val();;


        $.ajax({
     url: '@Url.Action("WriteMessage", "Message")',
     type: "post",
     contentType: 'application/x-www-form-urlencoded',
     data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {
                alert("Write Message from Signal R refresh Users");

         $("#MessageWritePage").html(result);


     }
 });


        }






    });







    connection2.start().then(

    ).catch(function (err) {
        alert("Błąd w Chat");

    }).then(() => {


    });

    /////


    //Signal R Check Users Status


    var ListOnlineUsers = [];


    var connection3 = new signalR.HubConnectionBuilder().withUrl("/messages2").build();
    var ChatUserId =@Html.Raw( Json.Serialize(@Model.ChatUserId));
    var names =  @Html.Raw(Json.Serialize(Model.list.Select(x=>x.ReceiverId)));


    function updateList(usersList) {

        var list = $('input[name="ReceiverId"]');


        if (usersList != null) {
            for (var i = 0; i < usersList.length; i++)
            {

                var x = usersList[i];

                var element = $("input[name='ReceiverId'][value='" + x+"']");

                if (element != null)
                {
                    element.next('img').attr('src', "/Images/online2.jpg");
                    alert("Change to online");
                }



            }


            }    
               
    }

    



    connection3.on("UpdateChatList_Add", function (SenderId) {     
              

        var exists = false;

        for (var i = 0; i < ListOnlineUsers.length; i++)
        {
            if (ListOnlineUsers[i] == SenderId)
            {
                exists = true;

            }
        }



        if (!exists)
        {
            ListOnlineUsers.push(SenderId);
        }
            

        updateList(ListOnlineUsers);

       



    });

    connection3.on("UpdateChatList_Remove", function (SenderId) {


        var exists = false;
        var list = $('input[name="ReceiverId"]');
        


        for (var i = 0; i < ListOnlineUsers.length; i++) {
            if (ListOnlineUsers[i] == SenderId) {
                ListOnlineUsers[i] = "";




                //list.eq




                for (var j = 0; j < list.length; j++)
                {
                    var xyz = list.eq(j);

                    if (xyz.val() == SenderId)
                    {

                       

                        alert("Remove Sender change status to offline");

                        xyz.next('img').attr('src', "/Images/offline2.jpg");
                    }


                }




            }
        }



        


       

       



    });
  


    @*connection3.on("CheckStatus", function (UserId)        
        {

        var data = {};

        data["UserId"] = UserId;
        //data["names"] = names;
        //data["ChatUserId"] = ChatUserId;
        

         $.ajax({
     url: '@Url.Action("CheckOnline", "Message")',
     type: "get",
     contentType: 'application/x-www-form-urlencoded',
             data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {

               //update status of users

     }
 });


    }
        
        
        );*@



     connection3.on("CheckStatus", function (UserId)        
        {

        

         var data = JSON.stringify({
             'UserId': UserId,
             'ChatUserId': ChatUserId,
             'names': names
         });

        

         $.ajax({
     url: '@Url.Action("CheckOnline", "Message")',
     type: 'post',
             contentType: 'application/json',
             data: data,
             traditional: true,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {

               //update status of users

     }
 });


    }
        
        
        );






 

    connection3.start().then(

        () => {

            connection3.invoke("Ask_Chat_Users", names, ChatUserId
            );




        }


    ).catch(function (err) {
        alert("Błąd w Check Status");

    }).then(() => {

       
        });



    function GoOffline()
    {


        //var data = {};

        //data["UserId"] = UserId;
        

         $.ajax({
     url: '@Url.Action("CheckOffline", "Message")',
     type: "get",
     contentType: 'application/x-www-form-urlencoded',
             //data: data,
     headers: {
         RequestVerificationToken:
             $('input:hidden[name="__RequestVerificationToken"]').val()
     },
            success: function (result) {

               //update status of users

     }
 });






    }



    connection3.onclose(() => {

        //write off line function
        alert("Close Conection");


        GoOffline();




       

    });




    
   
   





    ////



</script>